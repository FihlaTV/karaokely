package demo.aide.karaoke;

public class AudioData {
	
	// Not sure if this fits or not in this case but I just found a spot to practise my singleton pattern skill, yayyy! :)
	// Or maybe I just hate seeing a lot of "static" keywords popping up almost every where in a single class. I limited them to just one or two. (Does "one or two" mean "a lot of" in English? Well, ...)
	// I think I need some more sound sleep
	
	private static AudioData INSTANCE = null;
	
	private AudioData() { }
	
	protected static AudioData getInstance() {
		return INSTANCE = null == INSTANCE ? new AudioData() : INSTANCE;
	}
	// singleton pattern
	
	public int[][] loadAudioData(int dataAtThisNumber) {
		int [][] audioDataToLoad = null;
		switch(dataAtThisNumber) {
			case 1:
				audioDataToLoad = takeMeToYourHeart();
				break;
			case 2:
				audioDataToLoad = letItBe();
				break;
			default: break;
		}
		return audioDataToLoad;
	}
	
	private int[][] letItBe() {
		return new int[][] {
			
			{ 13533, 16268 },
			{ 17000, 17500, 18496, 19220 },
			{ 20181, 22066 },
			{ 22757, 23000 },
			{ 26671, 27437, 27837, 28200 },
			// 5
			{ 29106, 29627, 30427, 31817 },
			{ 32789, 33086, 33686, 34640 },
			{ 35489, 36021 },
			{ 38709, 39309, 	40017, 40617, 	41605, 42205,		43221, 43823, 44023, 44323 },
			{ 46261, 47888 },
			// 10
			{ 48986, 49486 },
			{ 52755, 54053, 54753, 55253 },
			{ 55778, 56326, 56726, 57579 },
			{ 59078, 60867 },
			{ 62009, 62709 },
			// 15
			{ 65669, 65869, 66130, 67042 },
			{ 68551, 69510, 69910, 71262 },
			{ 72440, 74000 },
			{ 75053, 75553 },
			{ 78395, 78895,		79880, 80380,	81650, 82150, 	83301, 83801 },
			// 20
			{ 85900, 87400 },
			{ 88397, 88897 },
			{ 91916, 92416, 	93441, 93941,	94922, 95422,	 96512, 97000 },
			{ 99244, 101036 },
			{ 101955, 102455 },
			// 25
			{ 146483, 146983,	148138, 148638, 	150021, 150521, 	151300, 152100 },
			{ 154466, 156086 },
			{ 157502, 158000 },
			{ 161583, 163288 },
			{ 164180, 165254, 166154, 167247 },
			// 30
			{ 168580, 170038 },
			{ 171331, 171831 },
			{ 175568, 175889, 176389, 177088, 177952, 178302 },
			{ 179034, 179700, 180469, 181018 },
			{ 182402, 183466, 184166, 184393 },
			// 35
			{ 185310, 185810 },
			{ 188554, 189054, 	190133, 190633, 	191901, 192401, 	193255, 193755 },
			{ 196321, 198080 },
			{ 199125, 199625, 200000, 201600 },
			{ 202410, 202910, 	204141, 204641, 	205845, 206145, 	207143, 207643 },
			// 40
			{ 210218, 211854 },
			{ 213126, 213626, 214000, 215600 },
			{ 216505, 217000, 	218030, 218530, 	219583, 220000, 	221058, 221558 },
			{ 224136, 225271, 225771, 226368 },
			{ 227100, 227600, 228000, 229549 }
			
		};
	}
	
	// Hmmm, don't you think that I just need to come up with more catchier method names.
	
	private int [][] takeMeToYourHeart() {
		
		return new int[][] {
	
			{ 6535, 7107, 7667, 8075 },
			{ 11687, 12428 },
			{ 14710, 14961, 15461, 15912 },
			{ 18012, 18557, 18857, 20000 },
			{ 20970, 22000, 22453, 23782 },
			// 5
			{ 25972, 26394, 26894, 28000 },
			{ 29784, 31000, 31335, 32000 },
			{ 34081,  34621, 35621,  36060, 37681, 38190, 	38690, 	  39517 },
			{ 41630, 42146, 42646, 43955,	45535, 46000, 46386, 47047 },
			{ 48576, 49600,},
			// 10
			{ 50404, 51231 },
			{ 52494, 53531, 53931, 55135 },
			{ 56412, 57291,},
			{ 58048, 59346 },
			{ 60345, 61651, 62051, 63093 },
			// 15
			{ 64010, 64894, 65294, 65945, 66345, 67367 },
			{ 68912, 71000 },
			{ 73131, 74161, 74561, 75099 },
			{ 77083, 77678, 78078, 78923 },
			{ 80097, 81094, 81294, 81994 },
			// 20
			{ 82414, 83281, 83481, 83881 },
			{ 84886, 86074, 86574, 87077 },
			{ 87887, 88596, 88996, 89722, 	90143, 91773 },
			{ 92761, 93361, 94781, 96435 },
			{ 132149, /*132878, 133278,*/ 134062 },
			// 25
			{ 135058, 137698 },
			{ 140092, 140611, 141111, 142032 },
			{ 143995, 144500, 145009, 145869 },
			{ 147920, 150392 },
			{ 151354, 152349, 152849, 153413 },
			// 30
			{ 155820, 156629, 157629, 158239 },
			{ 159643, 160502, 160802, 161328 },
			{ 162640, 163864 },
			{ 164564, 165829 },
			{ 166550, 167677, 168077, 169459 },
			// 35
			{ 170541, 172000 },
			{ 172510, 173578 },
			{ 174517, 175000, 175458, 175827, 176077, 177212 },
			{ 178404, 179030, 179430, 180211, 180811, 181664 },
			{ 182986, 185051 },
			// 40
			{ 187330, 188289, 188789, 189740 },
			{ 191109, 191753, 192153, 193046 },
			{ 194131, 195158, 196212 },
			{ 196530, 197704 },
			{ 199041, 200238, 200738, 201240 },
			// 45
			{ 202064, 203935 },
			{ 204443, 205047, 205941 },
			{ 206725, 207201, 208916, 210834 },
			{ 213825, 214500, 214909, 215200 },
			{ 216224, 217462 },
			// 50
			{ 218769, 219825, 220525, 221016 },
			{ 221714, 223212, 224003, 225000 },
			{ 226564, 227000, 228625, 229000, 229625, 230410 }
		};
	}
	
}
